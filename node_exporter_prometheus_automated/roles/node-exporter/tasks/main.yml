---
# tasks file for node-exporter
- name: "check if the node exporter is already installed or not"
  ansible.builtin.stat:
    path: "{{ node_exporter_bin }}"
  register: _check_node_exporter_present



- name: "Create the node exporter service account"
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: "Create the node exporter config dir"
  ansible.builtin.file:
    path: "{{ node_exporter_dir_conf}}"
    state: directory
    owner: "{{ node_exporter_user }}"
    group: "{{node_exporter_group}}"


- name: "download and unzip node exporter if not exist"
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version}}/node_exporter-{{ node_exporter_version}}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
    validate_certs: no
  when: _check_node_exporter_present.stat.exists == false

- name: "copy the downloaded binary file to the /usr/local/bin/node_exporter"
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter_bin }}"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group}}"
    mode: 0755
    remote_src: yes
  when: _check_node_exporter_present.stat.exists == false

- name: "clean the tmp folder downloaded files"
  file:
    path: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter
    state: absent

- name: " Install the service and start it "
  template:
   src: node_exporter.service.j2
   dest: /etc/systemd/system/node_exporter.service
   owner: root
   group: root
   mode: 0755
  notify: reload_daemon_and_restart_node_exporter

- meta: flush_handlers

- name: Service always started
  systemd_service:
    name: node_exporter
    state: started
    enabled: yes 

- name: "Create Prometheus target JSON file"
  copy:
    content: |
      [
        {
          "targets": ["{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:9100"],
          "labels": {
            "job": "node_exporter",
            "environment": "production"
          }
        }
      ]
    dest: "/etc/prometheus/targets/{{ inventory_hostname }}.json"
  delegate_to: "{{ groups['prometheus_server'][0] }}"
  when: inventory_hostname in groups['nodes']  # Ensures this task runs only for nodes in the 'nodes' group





# - name: "add the node exporter machines to the prometheus config file using template"
#  template:
#    src: "prometheus.yml.j2"
#   dest: "{{ prometheus_config_path }}"
#    owner: prometheus
#    group: prometheus
#    mode: 0644
#  notify: restart_prometheus
#  when: inventory_hostname == 'watchtower'



